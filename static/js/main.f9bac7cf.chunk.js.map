{"version":3,"sources":["components/Emoji/Emoji.js","components/Login/Login.js","components/Emoji/EmojiList.js","components/Diary/diary.js","App.js","serviceWorker.js","index.js"],"names":["Emoji","React","Component","props","className","role","aria-label","label","aria-hidden","onClick","symbol","EmojiList","emoji","e","document","getElementById","value","target","textContent","map","user","i","Diary","id","maxlength","type","placeholder","App","style","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wTAaeA,G,MCTKC,IAAMC,U,MDFZ,SAAAC,GAAK,OACf,0BACIC,UAAWD,EAAMC,UACjBC,KAAK,MACLC,aAAYH,EAAMI,MAAQJ,EAAMI,MAAQ,GACxCC,cAAaL,EAAMI,MAAQ,QAAU,OACrCE,QAASN,EAAMM,QAAUN,EAAMM,QAAU,IAExCN,EAAMO,UEoFAC,EA3FG,WAEjB,IAAMC,EAAQ,CACb,CACCL,MAAM,QACNH,UAAU,OACVM,OAAO,eACPD,QAAQ,SAASI,GAChBC,SAASC,eAAe,QAAQC,MAChCF,SAASC,eAAe,QAAQC,MAAMH,EAAEI,OAAOC,cAKjD,CACCX,MAAM,QACNH,UAAU,OACVM,OAAO,eACPD,QAAQ,SAASI,GAChBC,SAASC,eAAe,QAAQC,MAChCF,SAASC,eAAe,QAAQC,MAAMH,EAAEI,OAAOC,cAIjD,CACCX,MAAM,QACNH,UAAU,OACVM,OAAO,eACPD,QAAQ,SAASI,GAChBC,SAASC,eAAe,QAAQC,MAChCF,SAASC,eAAe,QAAQC,MAAMH,EAAEI,OAAOC,cAIjD,CACCX,MAAM,QACNH,UAAU,OACVM,OAAO,eACPD,QAAQ,SAASI,GAChBC,SAASC,eAAe,QAAQC,MAChCF,SAASC,eAAe,QAAQC,MAAMH,EAAEI,OAAOC,cAIjD,CACCX,MAAM,QACNH,UAAU,OACVM,OAAO,eACPD,QAAQ,SAASI,GAChBC,SAASC,eAAe,QAAQC,MAChCF,SAASC,eAAe,QAAQC,MAAMH,EAAEI,OAAOC,cAIjD,CACCX,MAAM,QACNH,UAAU,OACVM,OAAO,eACPD,QAAQ,SAASI,GAChBC,SAASC,eAAe,QAAQC,MAChCF,SAASC,eAAe,QAAQC,MAAMH,EAAEI,OAAOC,cAIjD,CACCX,MAAM,QACNH,UAAU,OACVM,OAAO,eACPD,QAAQ,SAASI,GAChBC,SAASC,eAAe,QAAQC,MAChCF,SAASC,eAAe,QAAQC,MAAMH,EAAEI,OAAOC,eAKlD,OACC,6BACIN,EAAMO,KAAI,SAACC,EAAKC,GAClB,OACC,kBAAC,EAAD,CAAOjB,UAAWQ,EAAMS,GAAGjB,UAC3BM,OAAQE,EAAMS,GAAGX,OACjBH,MAAOK,EAAMS,GAAGd,MAChBE,QAASG,EAAMS,GAAGZ,eClDRa,E,uKA3Bb,OACC,yBAAKlB,UAAW,2BAA2BmB,GAAG,QAC7C,yBAAKnB,UAAU,gCAEd,8BAAUmB,GAAG,OAAMnB,UAAU,MAAMoB,UAAU,QAA7C,aACA,wBAAIpB,UAAU,MAAd,gBAAgC,yBAAKA,UAAU,iBAAf,iBAA+C,yBAAKA,UAAU,mBAAf,YAA+C,kBAAC,EAAD,CAAOA,UAAU,gBAAgBM,OAAO,eAAKH,MAAM,YAAjL,IAA8L,yBAAKH,UAAU,mBAAf,gBAC9L,yBAAKA,UAAU,MAAK,kBAAC,EAAD,CAAOA,UAAU,MAAMM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,YAAYM,OAAO,eAAKH,MAAM,WACtH,yBAAKgB,GAAG,kBAAiB,yBAAKnB,UAAU,YAAf,IAA2B,kBAAC,EAAD,CAAOA,UAAU,UAAUM,OAAO,eAAKH,MAAM,UAAU,yBAAKH,UAAU,oBACzH,kBAAC,EAAD,SAED,wBAAIA,UAAU,MAAd,sDAAsE,yBAAKA,UAAU,YAAf,WAAtE,2DACA,wBAAIA,UAAU,MAAd,sDAAsE,yBAAKA,UAAU,YAAf,UAAtE,2DACA,yBAAKA,UAAU,MAAK,kBAAC,EAAD,CAAOA,UAAU,MAAMM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,YAAYM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,MAAMM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,YAAYM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,MAAMM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,YAAYM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,MAAMM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,YAAYM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,MAAMM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,YAAYM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,MAAMM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,YAAYM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,MAAMM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,YAAYM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,MAAMM,OAAO,eAAKH,MAAM,UAAU,kBAAC,EAAD,CAAOH,UAAU,YAAYM,OAAO,eAAKH,MAAM,YAG32B,yBAAKH,UAAU,sBACd,yBAAKA,UAAU,SAASmB,GAAG,cAC1B,2BAAOE,KAAK,SAASC,YAAY,eACjC,2BAAOD,KAAK,SAASC,YAAY,iBAGlC,yBAAKtB,UAAU,qBAAqBmB,GAAG,kB,GAxBxBtB,IAAMC,WCgBXyB,MAjBf,WAGE,OADAb,SAASC,eAAe,QAAQa,MAAM,0BAIrC,yBAAKxB,UAAU,SACV,yBAAKA,UAAU,oBAChB,2CAED,yBAAKA,UAAU,eACZ,kBAAC,EAAD,SCHWyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtB,SAASC,eAAe,SDuHpB,kBAAmBsB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f9bac7cf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Emoji = props => (\r\n    <span\r\n        className={props.className}\r\n        role=\"img\"\r\n        aria-label={props.label ? props.label : \"\"}\r\n        aria-hidden={props.label ? \"false\" : \"true\"}\r\n        onClick={props.onClick ? props.onClick : \"\"}\r\n    >\r\n        {props.symbol}\r\n    </span>\r\n);\r\nexport default Emoji;","import React from 'react';\r\nimport \"./Login.css\";\r\n\r\n\r\nclass Login extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail : '',\r\n\t\t\tpassword: '',\r\n\t\t\tname: ''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tconst signUpButton = document.getElementById('signUp');\r\n\t\tconst signInButton = document.getElementById('signIn');\r\n\t\tconst container = document.getElementById('container');\r\n\t\t    signUpButton.addEventListener('click', () => {\r\n\t\t\tcontainer.classList.add(\"right-panel-active\");\r\n\t\t});\r\n\r\n\t\tsignInButton.addEventListener('click', () => {\r\n\t\t\tcontainer.classList.remove(\"right-panel-active\");\r\n\t\t});\r\n\t}\r\n\r\nrender(){\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"container\" id=\"container\">\r\n\t\t\t\t<div className=\"form-container sign-up-container\">\r\n\t\t\t\t\t<form action=\"#\">\r\n\t\t\t\t\t\t<h1>Create Account</h1>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*---<span>or use your email for registration</span>---*/}\r\n\t\t\t\t\t\t<input className=\"w-100\" type=\"text\" placeholder=\"Name\" required/>\r\n\t\t\t\t\t\t<input className=\"w-100\" type=\"email\" placeholder=\"Email\" required/>\r\n\t\t\t\t\t\t<input className=\"w-100\" type=\"password\" placeholder=\"Password\" required />\r\n\t\t\t\t\t\t<input className=\"w-100\" type=\"password\" placeholder=\"Confirm Password\" required />\r\n\t\t\t\t\t\t<button>Sign Up</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-container sign-in-container\">\r\n\t\t\t\t\t<form action=\"#\">\r\n\t\t\t\t\t\t<h1>Sign in</h1>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*---<span>or use your account</span>---*/}\r\n\t\t\t\t\t\t<input className=\"w-100\" type=\"email\" placeholder=\"Email\" required/>\r\n\t\t\t\t\t\t<input className=\"w-100\" type=\"password\" placeholder=\"Password\" required/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<button>Sign In</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"overlay-container\">\r\n\t\t\t\t\t<div className=\"overlay\">\r\n\t\t\t\t\t\t<div className=\"overlay-panel overlay-left\">\r\n\t\t\t\t\t\t\t<h1>Welcome Back!</h1>\r\n\t\t\t\t\t\t\t<p>To keep connected with us please login with your personal info</p>\r\n\t\t\t\t\t\t\t<button className=\"ghost\" id=\"signIn\">Sign In</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"overlay-panel overlay-right\">\r\n\t\t\t\t\t\t\t<h1>Hello, Friend!</h1>\r\n\t\t\t\t\t\t\t<p>Enter your personal details and start journey with us</p>\r\n\t\t\t\t\t\t\t<button className=\"ghost\" id=\"signUp\">Sign Up</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n}\r\n\t\r\n\r\nexport default Login;","import React from 'react';\r\nimport Emoji from './Emoji.js';\r\n\r\nconst EmojiList = () => {\r\n\t \r\n\tconst emoji = [\r\n\t\t{\r\n\t\t\tlabel:\"cloud\",\r\n\t\t\tclassName:\"size\",\r\n\t\t\tsymbol:\"☁️\",\r\n\t\t\tonClick:function(e){\r\n\t\t\t\tdocument.getElementById(\"qual\").value = \r\n\t\t\t\tdocument.getElementById(\"qual\").value+e.target.textContent; \r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel:\"cloud\",\r\n\t\t\tclassName:\"size\",\r\n\t\t\tsymbol:\"☁️\",\r\n\t\t\tonClick:function(e){\r\n\t\t\t\tdocument.getElementById(\"qual\").value = \r\n\t\t\t\tdocument.getElementById(\"qual\").value+e.target.textContent; \r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel:\"cloud\",\r\n\t\t\tclassName:\"size\",\r\n\t\t\tsymbol:\"☁️\",\r\n\t\t\tonClick:function(e){\r\n\t\t\t\tdocument.getElementById(\"qual\").value = \r\n\t\t\t\tdocument.getElementById(\"qual\").value+e.target.textContent; \r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel:\"cloud\",\r\n\t\t\tclassName:\"size\",\r\n\t\t\tsymbol:\"☁️\",\r\n\t\t\tonClick:function(e){\r\n\t\t\t\tdocument.getElementById(\"qual\").value = \r\n\t\t\t\tdocument.getElementById(\"qual\").value+e.target.textContent; \r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel:\"cloud\",\r\n\t\t\tclassName:\"size\",\r\n\t\t\tsymbol:\"☁️\",\r\n\t\t\tonClick:function(e){\r\n\t\t\t\tdocument.getElementById(\"qual\").value = \r\n\t\t\t\tdocument.getElementById(\"qual\").value+e.target.textContent; \r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel:\"cloud\",\r\n\t\t\tclassName:\"size\",\r\n\t\t\tsymbol:\"☁️\",\r\n\t\t\tonClick:function(e){\r\n\t\t\t\tdocument.getElementById(\"qual\").value = \r\n\t\t\t\tdocument.getElementById(\"qual\").value+e.target.textContent; \r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel:\"cloud\",\r\n\t\t\tclassName:\"size\",\r\n\t\t\tsymbol:\"☁️\",\r\n\t\t\tonClick:function(e){\r\n\t\t\t\tdocument.getElementById(\"qual\").value = \r\n\t\t\t\tdocument.getElementById(\"qual\").value+e.target.textContent; \r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n\treturn (\r\n\t\t<div>{\r\n\t   \t\temoji.map((user,i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Emoji className={emoji[i].className}\r\n\t\t\t\t\tsymbol={emoji[i].symbol} \r\n\t\t\t\t\tlabel={emoji[i].label}\r\n\t\t\t\t\tonClick={emoji[i].onClick}\r\n\t\t\t\t\t />);\r\n\t\t\t\t\t}\r\n\t\t\t)\r\n\t   \t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default EmojiList;","import React from 'react';\r\nimport \"./diary.css\";\r\nimport Emoji from \".././Emoji/Emoji.js\";\r\nimport EmojiList from \".././Emoji/EmojiList.js\";\r\n\r\nclass Diary extends React.Component {\r\n\t \r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className =\"bg-black br3 pv4 pl4 pr0\" id=\"text\">\r\n\t\t\t\t<div className=\"dib  h-100 mh1 w-60 textarea\">\r\n\t\t\t\t  \r\n\t\t\t\t\t<textarea id=\"qual\"className=\"br3\" maxlength=\"1100\">Add Title</textarea>\r\n\t\t\t\t\t<h2 className=\"H1\">Dec 2, 2013 -<div className=\"dib stylechar\"> &#128448;</div><div className=\"dib styleletter\"> No Food</div><Emoji className=\"dib stylechar\" symbol=\"💭\" label=\"Comment\" /> <div className=\"dib styleletter\"> No Comment</div></h2>\r\n\t\t\t\t\t<div className=\"H4\"><Emoji className=\"cld\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"dib cloud\" symbol=\"☁️\" label=\"cloud\" /></div>\r\n\t\t\t\t\t<div id=\"emoji-dropdown\"><div className=\"dropdown\"> <Emoji className=\"dropbtn\" symbol=\"😀\" label=\"cloud\" /><div className=\"dropdown-content\">\r\n\t\t\t\t\t\t<EmojiList/>\r\n\t\t\t\t\t</div></div></div>\r\n\t\t\t\t\t<h6 className=\"H2\">---------------------------------------------------<div className=\"dib star\">{/*&#8902;&#128448;*/}\t&#9734;</div>-------------------------------------------------------</h6> \t\r\n\t\t\t\t\t<h6 className=\"H3\">---------------------------------------------------<div className=\"dib star\">&#8902;</div>-------------------------------------------------------</h6> \r\n\t\t\t\t\t<div className=\"H5\"><Emoji className=\"cld\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"dib cloud\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"cld\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"dib cloud\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"cld\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"dib cloud\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"cld\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"dib cloud\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"cld\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"dib cloud\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"cld\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"dib cloud\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"cld\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"dib cloud\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"cld\" symbol=\"☁️\" label=\"cloud\" /><Emoji className=\"dib cloud\" symbol=\"☁️\" label=\"cloud\" /></div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"dib h-100 rightclm\">\r\n\t\t\t\t\t<div className=\"w-100 \" id=\"search-box\">\r\n\t\t\t\t\t\t<input type=\"search\" placeholder=\"Enter Year\" />\r\n\t\t\t\t\t\t<input type=\"search\" placeholder=\"Enter Month\" />\r\n\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div className=\"bg-white br3 w-100\" id=\"profile\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Diary;","import React from 'react';\nimport './App.css';\nimport Login from \"./components/Login/Login.js\";\nimport Diary from \"./components/Diary/diary.js\";\nfunction App() {\n  \n\t document.getElementById(\"root\").style=\"width:100%;height:100%;\";\n  return (\n\n  \t// <Login />\n  \t<div className=\"full \">\n        <div className=\"center diaryname\">\n  \t  \t\t<h1>Diary Name</h1>\n        </div>\n  \t  \t<div className=\"App  w-100 \">\t\n  \t      <Diary />\n  \t     </div>\n  \t</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}